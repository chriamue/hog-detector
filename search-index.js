var searchIndex = JSON.parse('{\
"hog_detector":{"doc":"hog-detector","tn":["Annotation","Class","DataSet","Detector","HogDetector","Predictable","Trainable","bbox","classifier","data_augmentation","dataset","detection","detector","hogdetector","predictable","prelude","tests","trainable","utils","wasm","BBox","approx_from","approx_into","borrow","borrow_mut","bot","clone","clone_into","default","eq","fmt","from","from_subset","h","into","into_prop_value","into_prop_value","iou","is_in_subset","left","overlay","right","to_owned","to_subset","to_subset_unchecked","top","try_from","try_from","try_into","try_into","type_id","union","value_from","value_into","vzip","w","x","y","Classifier","RandomForestClassifier","SVMClassifier","approx_from","approx_from","approx_into","approx_into","borrow","borrow","borrow_mut","borrow_mut","default","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from_subset","from_subset","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","serialize","serialize","svc","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","value_from","value_from","value_into","value_into","vzip","vzip","DataAugmentation","augment","DataSet","EyesDataSet","FolderDataSet","MemoryDataSet","MnistDataSet","add","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","augment","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","export","export","from","from","from","from","from_subset","from_subset","from_subset","from_subset","generate_hard_negative_samples","generate_random_annotations","generate_random_annotations","generate_random_annotations","generate_random_annotations","generate_random_annotations","generate_random_annotations_from_image","get","get","get","get","get","into","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","is_in_subset","label_id","label_props","load","load","load","load","load","new","new","samples","samples","samples","samples","samples","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","Detection","approx_from","approx_into","bbox","borrow","borrow_mut","class","clone","clone_into","confidence","default","eq","fmt","from","from_subset","into","into_prop_value","into_prop_value","is_in_subset","merge","merge","nms_sort","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","Detector","detect_objects","detect_objects","visualize_detections","visualize_detections","HogDetector","approx_from","approx_into","borrow","borrow_mut","classifier","default","deserialize","detect_objects","detect_objects","eq","evaluate","evaluate","fmt","from","from_subset","into","into_prop_value","into_prop_value","is_in_subset","ne","predict","predict","preprocess","preprocess_matrix","random_forest","serialize","to_subset","to_subset_unchecked","train","train","train_class","train_class","try_from","try_from","try_into","try_into","type_id","value_from","value_into","visualize_detections","visualize_detections","vzip","Predictable","predict","BBox","Detection","test_image","test_image","test_image","Trainable","evaluate","train","train_class","base64_image_to_image","generate_random_subimages","image_to_base64_image","pyramid","rotated_frames","scaled_frames","sliding_window","window_crop","annotated_images_js","annotation_tool","annotations_js","download","hogdetector_js","init_annotation_tool","init_images","init_trainer","trainer","AnnotatedImagesJS","add_annotation","approx_from","approx_into","borrow","borrow_mut","clone","clone_into","create_dataset","default","describe","eq","fmt","fmt","from","from_abi","from_subset","inner","into","into_abi","into_prop_value","into_prop_value","is_in_subset","is_none","new","none","push","ref_from_abi","ref_mut_from_abi","return_abi","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","AddImage","AnnotationsChanged","App","ImageChanged","ImageSelected","LabelChanged","Msg","NewAnnotation","Props","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","create","editor","eq","from","from","from","from_subset","from_subset","from_subset","header","images","images_list","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","labels","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update","upload_annotations","upload_image","use_webcam_image","value_from","value_from","value_from","value_into","value_into","value_into","view","vzip","vzip","vzip","0","0","0","0","0","DownloadAnnotations","Dropped","Editor","MouseDown","MouseUp","Msg","Nothing","Props","annotations","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","create","eq","filename","format_annotation","format_annotations","from","from","from","from_subset","from_subset","from_subset","image","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","label","onchange","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update","value_from","value_from","value_from","value_into","value_into","value_into","view","vzip","vzip","vzip","0","0","0","1","1","Header","approx_from","approx_into","borrow","borrow_mut","create","from","from_subset","into","into_prop_value","into_prop_value","is_in_subset","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","view","vzip","AddImage","ImagesList","Msg","Props","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","create","current","eq","from","from","from","from_subset","from_subset","from_subset","images","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","onaddimage","onimageselected","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update","value_from","value_from","value_from","value_into","value_into","value_into","view","vzip","vzip","vzip","Labels","Props","approx_from","approx_from","approx_into","approx_into","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone_into","create","eq","from","from","from_subset","from_subset","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","label","onchange","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","update","value_from","value_from","value_into","value_into","view","vzip","vzip","Props","UploadAnnotations","approx_from","approx_from","approx_into","approx_into","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone_into","create","eq","from","from","from_subset","from_subset","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","onchange","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","value_from","value_from","value_into","value_into","view","vzip","vzip","Props","UploadImage","approx_from","approx_from","approx_into","approx_into","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone_into","create","eq","from","from","from_subset","from_subset","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","onchange","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","value_from","value_from","value_into","value_into","view","vzip","vzip","GetWebcamImage","Msg","Props","UseWebcamImage","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","create","eq","from","from","from","from_subset","from_subset","from_subset","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","onchange","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update","value_from","value_from","value_from","value_into","value_into","value_into","view","vzip","vzip","vzip","AnnotationsJS","approx_from","approx_into","borrow","borrow_mut","clear","clone","clone_into","create_dataset","default","describe","eq","fmt","fmt","from","from_abi","from_subset","get_annotations","get_image","into","into_abi","into_prop_value","into_prop_value","is_in_subset","is_none","len","new","none","push","ref_from_abi","ref_mut_from_abi","return_abi","set_image","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","download_bytes","HogDetectorJS","approx_from","approx_into","borrow","borrow_mut","clone","clone_into","default","describe","eq","from","from_abi","from_subset","into","into_abi","into_prop_value","into_prop_value","is_in_subset","is_none","new","next","none","ref_from_abi","ref_mut_from_abi","return_abi","to_owned","to_subset","to_subset_unchecked","train","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","Msg","Props","Train","TrainerApp","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","create","detector","eq","from","from","from","from_subset","from_subset","from_subset","images","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update","value_from","value_from","value_from","value_into","value_into","value_into","view","vzip","vzip","vzip"],"q":["hog_detector","","","","","","","","","","","","","","","","","","","","hog_detector::bbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::classifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::data_augmentation","","hog_detector::dataset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::detection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::detector","","","","","hog_detector::hogdetector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::predictable","","hog_detector::prelude","","hog_detector::tests","","hog_detector::tests::test_image","hog_detector::trainable","","","","hog_detector::utils","","","","","","","","hog_detector::wasm","","","","","","","","","hog_detector::wasm::annotated_images_js","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::Msg","","","","","hog_detector::wasm::annotation_tool::editor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::editor::Msg","","","","","hog_detector::wasm::annotation_tool::header","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::images_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::labels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::upload_annotations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::upload_image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotation_tool::use_webcam_image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::annotations_js","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::download","hog_detector::wasm::hogdetector_js","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::wasm::trainer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["annotation is a object bounding box in image and class type","object class type","","","","","","bounding box struct and functions","module for classifiers","data augmentation trait","functionality for loading train datasets","detection struct module","detector functionality","hogdetector struct module","predict functionality","the hog_detector prelude","some structs and functions usable for tests","train functions","some functions for manipulating images","web assembly module","A bounding box struct with mergre functions","","","","","bottom of bounding box","","","","","","Returns the argument unchanged.","","height","Calls <code>U::from(self)</code>.","","","calculate the intersection over union with another …","","left side of bounding box","calculate the amount of overlap with another bounding box","right side of bounding box","","","","top of bounding box","","","","","","calculate the union with another bounding box","","","","width","left side","upper side","A classifier trait","A Random Forrest classifier","A Support Vector Machine classifier","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","svc classifier","","","","","","","","","","","","","","","","","","","","","data augmentation trait","augment dataset images","trait for a dataset","dataset of eyes images from tiruss/eye_detector","Dataset of data from a folder","Memory only dataset","the well known mnist dataset","adds sample to dataset","","","","","","","","","","","","","","","","","","","","","export dataset to given folder","export dataset to given folder","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","generates hard negative samples, see: Hard Negative Mining","generates random annotations","","","","","generates random annotations from an image","get train and test data","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","get id of label from labels","get vector of labels with given label as 1","loads the dataset","","","","","construct new EyesDataSet","constructor of FolderDataSet","number of samples in dataset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","representation of a detection","","","bounding box of the detection","","","class of the detection","","","confidence of the detection","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","merge all possible detections from the list of detections","merge other detection into this detection","run non max suppression sort algorithm on detections","","","","","","","","","","","","detector trait","converts list of (x, y, class) into detections","detects objects im given image","visualizes detections on given image","visualize detections on image","Hog Detector struct","","","","","support vector classifier","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","preprocesses image to vector","preprocesses images into dense matrix","new default random forest","","","","","","","","","","","","","","","","","","predictable trait","predicts class of image","","","mod for test image","","a simple image for testing purposes","trainable trait","evaluate class on dataset","trains on given data","train class on given dataset","decodes base64 encoded image to dynamic image","generates random subimage of given size","converts dynamic image to base64 encoded png image","calculates pyramid of windows from image","returns iterator over rotated windows of given image","returns iterator over scaled frames of given image","calculates sliding window based windows","returns crop of image","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Downloads raw slice of bytes as a file from the browser","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,9,10,10,9,10,9,10,9,9,10,9,10,9,9,10,10,9,9,10,10,9,10,9,10,9,10,9,10,0,58,0,0,0,0,0,11,13,12,11,14,13,12,11,14,12,13,12,11,14,13,12,11,14,13,11,14,13,12,13,12,11,14,13,12,11,14,12,26,13,12,11,14,13,26,13,12,11,14,13,12,11,14,13,13,12,12,11,11,14,14,13,12,11,14,13,13,26,13,12,11,14,13,12,26,13,12,11,14,13,12,11,14,13,12,11,14,13,13,12,12,11,11,14,14,13,13,12,12,11,11,14,14,13,12,11,14,13,12,11,14,13,12,11,14,13,12,11,14,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,0,22,22,22,22,22,22,22,22,22,22,22,0,0,16,0,16,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,59,0,0,0,0,0,0,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,61,61,0,61,61,61,0,61,0,61,39,37,61,39,37,61,39,37,61,39,37,37,37,37,39,0,37,61,39,37,61,39,37,0,37,0,61,39,37,61,61,39,39,37,37,61,39,37,0,37,61,39,37,61,39,37,61,61,39,39,37,37,61,61,39,39,37,37,61,39,37,39,0,0,0,61,39,37,61,39,37,39,61,39,37,62,63,64,65,66,67,67,0,67,67,0,67,0,41,67,42,41,67,42,41,67,42,41,67,42,41,41,41,41,42,41,41,0,0,67,42,41,67,42,41,41,67,42,41,67,67,42,42,41,41,67,42,41,41,41,41,67,42,41,67,42,41,67,67,42,42,41,41,67,67,42,42,41,41,67,42,41,42,67,42,41,67,42,41,42,67,42,41,68,69,70,69,70,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,71,0,0,0,45,71,44,45,71,44,45,71,44,45,71,44,44,44,44,45,44,44,45,71,44,45,71,44,44,45,71,44,45,45,71,71,44,44,45,71,44,44,44,44,45,71,44,45,71,44,45,45,71,71,44,44,45,45,71,71,44,44,45,71,44,45,45,71,44,45,71,44,45,45,71,44,0,0,47,46,47,46,47,46,47,46,46,46,46,47,46,47,46,47,46,47,46,47,47,46,46,47,46,46,46,46,47,46,47,46,47,47,46,46,47,47,46,46,47,46,47,47,46,47,46,47,47,46,0,0,49,48,49,48,49,48,49,48,48,48,48,49,48,49,48,49,48,49,48,49,49,48,48,49,48,48,48,49,48,49,48,49,49,48,48,49,49,48,48,49,48,49,48,49,48,49,49,48,0,0,51,50,51,50,51,50,51,50,50,50,50,51,50,51,50,51,50,51,50,51,51,50,50,51,50,50,50,51,50,51,50,51,51,50,50,51,51,50,50,51,50,51,50,51,50,51,51,50,72,0,0,0,72,53,52,72,53,52,72,53,52,72,53,52,52,52,52,53,52,72,53,52,72,53,52,72,53,52,72,72,53,53,52,52,72,53,52,52,52,72,53,52,72,53,52,72,72,53,53,52,52,72,72,53,53,52,52,72,53,52,53,72,53,52,72,53,52,53,72,53,52,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,73,0,57,73,56,57,73,56,57,73,56,57,73,56,56,56,56,57,56,56,57,73,56,57,73,56,56,57,73,56,57,57,73,73,56,56,57,73,56,56,57,73,56,57,73,56,57,57,73,73,56,56,57,57,73,73,56,56,57,73,56,57,57,73,56,57,73,56,57,57,73,56],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[2,3],[2,2],[[]],[[],2],[[2,2],4],[[2,5],6],[[]],[[]],0,[[]],[[],7],[[]],[[2,2],3],[[],4],[2,3],[[2,2],3],[2,3],[[]],[[],7],[[]],[2,3],[[],1],[[],1],[[],1],[[],1],[[],8],[[2,2],3],[[],1],[[],1],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],9],[[],10],[[],[[1,[9]]]],[[],[[1,[10]]]],[[9,9],4],[[10,10],4],[[9,5],6],[[10,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[]],[[],7],[[],4],[[],4],[9,1],[10,1],0,[[],7],[[],7],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],1],[[],1],[[],1],[[],1],[[]],[[]],0,[[]],0,0,0,0,0,[11],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],11],[[],14],[[13,15]],[[12,15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,16,17,[7,[18]]]],[18],[[13,18]],[[12,18]],[[11,18]],[[14,18]],[[19,20,18,17],21],[[]],[13],[12],[11],[14],[[]],[[]],[[]],[[]],[[],7],[[]],[[]],[[],7],[[],7],[[]],[[]],[[],7],[[],4],[[],4],[[],4],[[],4],[15,17],[15,[[21,[3]]]],[[]],[13],[12],[11],[14],[[20,20,20,17],13],[[20,20,17],12],[[],18],[13,18],[12,18],[11,18],[14,18],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[],8],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,[[]],[[]],0,[22,22],[[]],0,[[],22],[[22,22],4],[[22,5],6],[[]],[[]],[[]],[[]],[[],7],[[],4],[[[21,[22]]],[[21,[22]]]],[[22,22]],[[[21,[22]]],[[21,[22]]]],[[]],[[],7],[[]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[]],0,[[21,17],[[21,[22]]]],[23,[[21,[22]]]],[[23,21],23],[23,23],0,[[],1],[[],1],[[]],[[]],0,[[],[[25,[24]]]],[[],[[1,[[25,[24]]]]]],[[[25,[9]],23],[[21,[22]]]],[[[25,[10]],23],[[21,[22]]]],[[[25,[24]],25],4],[[[25,[9]],26,17],3],[[[25,[10]],26,17],3],[[[25,[[0,[27,24]]]],5],6],[[]],[[]],[[]],[[]],[[],7],[[],4],[[[25,[24]],[25,[24]]],4],[[[25,[9]],19],17],[[[25,[10]],19],17],[[[25,[24]],19],[[21,[3]]]],[[[25,[24]],[21,[19]]],[[28,[3]]]],[[],[[25,[10]]]],[[[25,[24]]],1],[[],7],[[]],[[[25,[9]],[28,[3]],[21,[3]]]],[[[25,[10]],[28,[3]],[21,[3]]]],[[[25,[9]],26,17]],[[[25,[10]],26,17]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[[25,[10]],23],23],[[[25,[9]],23],23],[[]],0,[19,17],0,0,0,0,[[],19],0,[[26,17],3],[[[28,[3]],[21,[3]]]],[[26,17]],[15,23],[[19,18,17,17],[[21,[19]]]],[23,20],[[19,3,18,17],21],[19,29],[19,29],[[19,18,17],21],[[19,17,17],19],0,0,0,0,0,[[30,31]],[31],[[30,31,32]],0,0,[[31,18,33]],[[],1],[[],1],[[]],[[]],[31,31],[[]],[31,11],[[],31],[[]],[[31,31],4],[[31,5],6],[[31,5],6],[[]],[17,31],[[]],[31,[[36,[[35,[[21,[34]]]]]]]],[[]],[31,17],[[]],[[],7],[[],4],[[],4],[[],31],[[]],[[31,34]],[[]],[[]],[[]],[[]],[[],20],[[],7],[[]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[[]],[38,39],0,[[37,37],4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[],7],[[]],[[],4],[[],4],[[],4],0,[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[39,38],4],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[39,38],40],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,41],[[]],[38,42],[[41,41],4],0,[[33,21],20],[[21,21],[[21,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[]],[[],7],[[]],[[],7],[[]],[[],4],[[],4],[[],4],0,0,[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[42,38],4],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[42,38],40],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[38,43],[[]],[[]],[[]],[[],7],[[]],[[],4],[[],7],[[]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[43,38],40],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[[]],[38,45],0,[[44,44],4],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[]],[[]],[[],7],[[]],[[],7],[[],4],[[],4],[[],4],0,0,[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[45,38],4],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[45,38],40],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[46,46],[[]],[38,47],[[46,46],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[],4],[[],4],0,0,[[]],[[],7],[[],7],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[47,38],4],[[],1],[[],1],[[],1],[[],1],[[47,38],40],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[48,48],[[]],[38,49],[[48,48],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[]],[[],7],[[],4],[[],4],0,[[]],[[],7],[[],7],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],1],[[],1],[[],1],[[],1],[[49,38],40],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[50,50],[[]],[38,51],[[50,50],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[],4],[[],4],0,[[]],[[],7],[[],7],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],1],[[],1],[[],1],[[],1],[[51,38],40],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[[]],[38,53],[[52,52],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[]],[[]],[[],7],[[],7],[[]],[[],4],[[],4],[[],4],0,[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[53,38],4],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[53,38],40],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[34],[34,34],[[]],[34,11],[[],34],[[]],[[34,34],4],[[34,5],6],[[34,5],6],[[]],[17,34],[[]],[34,[[21,[33]]]],[34,23],[[]],[34,17],[[]],[[],7],[[],4],[[],4],[34,18],[[],34],[[]],[[34,33]],[[]],[[]],[[]],[[34,23]],[[]],[[],20],[[],7],[[]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[]],[[54,15]],0,[[],1],[[],1],[[]],[[]],[32,32],[[]],[[],32],[[]],[[32,32],4],[[]],[17,32],[[]],[[]],[32,17],[[],7],[[]],[[],4],[[],4],[[],32],[32,[[21,[55]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[]],[[32,26]],[[],1],[[],1],[[],1],[[],1],[[],8],[[],1],[[],1],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[[]],[38,57],0,[[56,56],4],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],7],[[]],[[],7],[[],7],[[]],[[],4],[[],4],[[],4],[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],8],[[],8],[[],8],[[57,38],4],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[57,38],40],[[]],[[]],[[]]],"p":[[4,"Result"],[3,"BBox"],[15,"f32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"TypeId"],[3,"SVMClassifier"],[3,"RandomForestClassifier"],[3,"MemoryDataSet"],[3,"FolderDataSet"],[3,"EyesDataSet"],[3,"MnistDataSet"],[15,"str"],[8,"Detector"],[15,"u32"],[15,"usize"],[6,"RgbImage"],[3,"String"],[3,"Vec"],[3,"Detection"],[4,"DynamicImage"],[8,"Classifier"],[3,"HogDetector"],[8,"DataSet"],[8,"Debug"],[3,"DenseMatrix"],[8,"Iterator"],[3,"Element"],[3,"AnnotatedImagesJS"],[3,"HogDetectorJS"],[6,"Annotation"],[3,"AnnotationsJS"],[3,"Mutex"],[3,"Arc"],[3,"Props"],[3,"Context"],[3,"App"],[6,"Html"],[3,"Props"],[3,"Editor"],[3,"Header"],[3,"Props"],[3,"ImagesList"],[3,"Props"],[3,"Labels"],[3,"Props"],[3,"UploadAnnotations"],[3,"Props"],[3,"UploadImage"],[3,"Props"],[3,"UseWebcamImage"],[8,"AsRef"],[15,"u8"],[3,"Props"],[3,"TrainerApp"],[8,"DataAugmentation"],[8,"Predictable"],[8,"Trainable"],[4,"Msg"],[13,"LabelChanged"],[13,"ImageChanged"],[13,"AnnotationsChanged"],[13,"NewAnnotation"],[13,"ImageSelected"],[4,"Msg"],[13,"Dropped"],[13,"MouseDown"],[13,"MouseUp"],[4,"Msg"],[4,"Msg"],[4,"Msg"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
