var searchIndex = JSON.parse('{\
"hog_detector":{"doc":"hog-detector","t":[8,8,2,0,0,0,10,0,0,10,0,10,10,0,0,8,8,10,8,8,3,3,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,12,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,6,8,8,3,8,8,8,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5],"n":["DataSet","Detector","HogDetector","classifier","data_augmentation","dataset","detect","detector","feature_descriptor","get_data","hogdetector","len","load","prelude","utils","Classifier","DataAugmentation","augment","AnnotatedImageSet","DataSet","EyesDataSet","MnistDataSet","add_annotated_image","annotated_images","annotated_images_len","approx_from","approx_from","approx_into","approx_into","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","drop","drop","export","from","from","from_subset","from_subset","generate_random_annotations_from_image","get_data","get_data","get_data","init","init","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","label_id","label_props","len","len","len","load","load","load","new","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","value_from","value_from","value_into","value_into","vzip","vzip","Detector","detect","detect_objects","visualize_detections","CombinedFeatureDescriptor","approx_from","approx_into","borrow","borrow_mut","default","deref","deref_mut","drop","extract","fmt","from","from_subset","init","into","into_prop_value","into_prop_value","is_in_subset","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","HogDetector","HogDetectorTrait","approx_from","approx_into","borrow","borrow_mut","classifier","default","deref","deref_mut","detect","detect","detector","drop","eq","evaluate","feature_descriptor","fit_class","fit_class","fmt","from","from_subset","init","into","into_prop_value","into_prop_value","is_in_subset","load","preprocess","preprocess_matrix","save","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","visualize_detections","visualize_detections","vzip","AnnotatedImage","Annotation","BBox","Class","Classifier","DataSet","Detection","Detector","Predictable","Trainable","annotations","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","bbox","bbox","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","class","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","confidence","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","detect","drop","drop","drop","drop","eq","eq","eq","eq","fit","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_data","height","image","init","init","init","init","intersect_area","intersect_height","intersect_width","into","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","is_in_subset","is_in_subset","is_in_subset","is_in_subset","left","len","load","merge","mul_acc","new","new","overlap","predict","right","self_area","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union_area","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","width","x","y","base64_image_to_image","image_to_base64_image"],"q":["hog_detector","","","","","","","","","","","","","","","hog_detector::classifier","hog_detector::data_augmentation","","hog_detector::dataset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::detector","","","","hog_detector::feature_descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::hogdetector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hog_detector::utils",""],"d":["web assembly module Trait representing a dataset of images …","Trait for object detection","","module for classifiers","This module provides a trait for data augmentation. Data …","The <code>dataset</code> module provides functionality for loading …","Detects objects in an image","detector functionality","Feature descriptors are used in computer vision and image …","Returns the images and labels for training","hogdetector struct module","Returns the number of images in the dataset","Loads the dataset","the hog_detector prelude","This module provides a collection of functions for …","naive bayes classifier module combined classifier of two …","data augmentation trait","augment dataset images","trait of a set of annotated images","Trait representing a dataset of images and labels for …","dataset of eyes images from tiruss/eye_detector","the well known mnist dataset","adds an annotated image","returns iterator over annotated images","returns length of annotated images","","","","","","","","","","","","","","","","","export dataset to given folder","Returns the argument unchanged.","Returns the argument unchanged.","","","generates random annotations from an image","Returns the images and labels for training","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","get id of label from labels","get vector of labels with given label as 1","Returns the number of images in the dataset","","","Loads the dataset","","","construct new EyesDataSet","","","","","","","","","","","","","","","","","","","","","Trait for object detection","Detects objects in an image","detect_objects() takes in a vector of tuples containing x, …","visualizes detections on given image","defines a feature descriptor combination","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Hog Detector struct ,—–.  ,———.   ,…","trait of an hog detector","","","","","support vector classifier","","","","","","reference to detector trait","","","evaluate class on dataset","the feature descriptor","fit model for class","fit model for class","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","load from string","preprocesses image to vector","preprocesses images into dense matrix","save to string","","","","","","","","","","visualizes detections","visualizes detections","","Image annotated by list of Annotations","annotation is a object bounding box in image and class type","Struct for representing a bounding box","object class type","The Classifier trait defines the behavior of a machine …","Trait representing a dataset of images and labels for …","Struct for representing a detected object","Trait for object detection","Trait for objects that can make predictions","Trait for objects that can be trained","Annotations for the image","","","","","","","","","Bounding box of the detected object","Bounding box of the object","","","","","","","","","Returns the bottom coordinate of the bounding box","Class of the detected object","Class of the object","","","","","","","","","Confidence of the detection","","","","","","","","","","Detects objects in an image","","","","","","","","","Trains the <code>SVMClassifier</code> on the provided training data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the images and labels for training","Height of the bounding box","Image","","","","","Calculates the area of the intersection between two …","Calculates the height of the intersection between two …","Calculates the width of the intersection between two …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the left coordinate of the bounding box","Returns the number of images in the dataset","Loads the dataset","Merges two bounding boxes into a single bounding box that …","","Creates a new bounding box with the specified coordinates …","Creates a new <code>Detection</code> with the given bounding box, …","Calculates the overlap between two bounding boxes as the …","Makes predictions on the provided data using the trained …","Returns the right coordinate of the bounding box","Calculates the area of the bounding box","","","","","","","","","","","","","Returns the top coordinate of the bounding box","","","","","","","","","","","","","","","","","","","","","Calculates the area of the union between two bounding boxes","","","","","","","","","","","","","Width of the bounding box","X coordinate of the top-left corner of the bounding box","Y coordinate of the top-left corner of the bounding box","decodes base64 encoded image to dynamic image","converts dynamic image to base64 encoded png image"],"i":[0,0,0,0,0,0,27,0,0,28,0,28,28,0,0,0,0,39,0,0,0,0,40,40,40,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,11,12,11,12,11,28,11,12,11,12,11,12,11,11,12,12,11,12,11,11,28,11,12,28,11,12,11,11,12,11,12,11,11,12,12,11,11,12,12,11,12,11,12,11,12,11,12,0,27,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,26,26,26,26,26,26,26,26,26,26,41,26,26,26,26,26,26,26,26,26,26,26,26,26,26,41,26,26,41,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,9,32,2,34,9,32,2,34,9,2,34,32,2,34,9,32,2,34,9,32,2,34,32,2,34,9,32,2,34,9,2,32,32,2,34,9,32,2,34,9,27,32,2,34,9,32,2,34,9,42,32,2,34,9,32,2,34,9,32,2,34,9,28,32,9,32,2,34,9,32,32,32,32,2,34,9,32,32,2,2,34,34,9,9,32,2,34,9,32,28,28,32,32,32,2,32,43,32,32,32,2,34,9,32,2,34,9,32,2,34,9,32,32,32,2,2,34,34,9,9,32,32,2,2,34,34,9,9,32,2,34,9,32,32,2,34,9,32,2,34,9,32,2,34,9,32,32,32,0,0],"f":[0,0,0,0,0,0,[1,[[4,[2,3]]]],0,0,[[]],0,[[],5],[[],[[8,[[7,[6,3]]]]]],0,0,0,0,[[]],0,0,0,0,[9],[[],[[7,[10,3]]]],[[],5],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[],11],[[],12],[5],[5],[5],[5],[5],[5],[[11,13]],[[]],[[]],[[]],[[]],[[1,14,5,15],4],[[]],[11],[12],[[],5],[[],5],[[]],[[]],[[],16],[[]],[[]],[[],16],[[],17],[[],17],[13,15],[13,[[4,[18]]]],[[],5],[11,5],[12,5],[[],[[8,[[7,[6,3]]]]]],[11,[[8,[[7,[6]]]]]],[12,[[8,[[7,[6]]]]]],[[14,14,14,15],11],[[],16],[[],16],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],8],[[],8],[[],8],[[],8],[[]],[[]],0,[1,[[4,[2,3]]]],[[4,15],[[4,[2]]]],[[1,4],1],0,[[],8],[[],8],[[]],[[]],[[],20],[5],[5],[5],[[20,1],[[8,[[4,[18]],14]]]],[[20,21],22],[[]],[[]],[[],5],[[]],[[],16],[[]],[[],17],[[],16],[[]],[[],8],[[],8],[[],8],[[],8],[[],19],[[],8],[[],8],[[]],0,0,[[],8],[[],8],[[]],[[]],0,[[],[[26,[[0,[23,24]],25]]]],[5],[5],[[[26,[18,17,[23,[18,17]]]],1],[[4,[2]]]],[[[26,[18,5,[23,[18,5]]]],1],[[4,[2]]]],[[],27],[5],[[[26,[23]],26],17],[[[26,[23]],28,29],18],0,[[[26,[18,17,[23,[18,17]]]],4,4,29],[[8,[14]]]],[[[26,[18,5,[23,[18,5]]]],4,4,29],[[8,[14]]]],[[[26,[[0,[30,23]]]],21],22],[[]],[[]],[[],5],[[]],[[]],[[],16],[[],17],[13],[[[26,[23]],1],[[4,[18]]]],[[[26,[23]],[4,[1]]],[[31,[18]]]],[[],14],[[],16],[[]],[[],8],[[],8],[[],8],[[],8],[[],19],[[],8],[[],8],[[[26,[18,17,[23,[18,17]]]],1],1],[[[26,[18,5,[23,[18,5]]]],1],1],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,33],0,0,[32,32],[2,2],[34,34],[9,9],[[]],[[]],[[]],[[]],0,[[],32],[5],[5],[5],[5],[5],[5],[5],[5],[1,[[4,[2,3]]]],[5],[5],[5],[5],[[32,32],17],[[2,2],17],[[34,34],17],[[9,9],17],[[35,35],[[8,[14]]]],[[32,21],[[8,[36]]]],[[2,21],[[8,[36]]]],[[34,21],[[8,[36]]]],[[9,21],[[8,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[32,32],15],[[32,32],15],[[32,32],15],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[],16],[[]],[[]],[[],16],[[],17],[[],17],[[],17],[[],17],[32,33],[[],5],[[],[[8,[[7,[6,3]]]]]],[[32,32],32],[[]],[[33,33,15,15],32],[[32,15,18],2],[[32,32],18],[35,[[8,[[35,[37,38]],14]]]],[32,33],[32,15],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[32,33],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[32,32],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,[13,1],[1,14]],"p":[[4,"DynamicImage"],[3,"Detection"],[3,"Global"],[3,"Vec"],[15,"usize"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"AnnotatedImage"],[8,"Iterator"],[3,"EyesDataSet"],[3,"MnistDataSet"],[15,"str"],[3,"String"],[15,"u32"],[4,"Option"],[15,"bool"],[15,"f32"],[3,"TypeId"],[3,"CombinedFeatureDescriptor"],[3,"Formatter"],[6,"Result"],[8,"Classifier"],[8,"Default"],[3,"SlidingWindow"],[3,"HogDetector"],[8,"Detector"],[8,"DataSet"],[6,"Class"],[8,"Debug"],[3,"DenseMatrix"],[3,"BBox"],[15,"i32"],[3,"Annotation"],[3,"ArrayBase"],[3,"Error"],[3,"OwnedRepr"],[3,"Dim"],[8,"DataAugmentation"],[8,"AnnotatedImageSet"],[8,"HogDetectorTrait"],[8,"Trainable"],[8,"Predictable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
