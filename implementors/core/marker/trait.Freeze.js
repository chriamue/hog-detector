(function() {var implementors = {
"hog_detector":[["impl Freeze for <a class=\"struct\" href=\"hog_detector/bbox/struct.BBox.html\" title=\"struct hog_detector::bbox::BBox\">BBox</a>",1,["hog_detector::bbox::BBox"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/classifier/bayes/struct.BayesClassifier.html\" title=\"struct hog_detector::classifier::bayes::BayesClassifier\">BayesClassifier</a>",1,["hog_detector::classifier::bayes::BayesClassifier"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/classifier/combined/struct.CombinedClassifier.html\" title=\"struct hog_detector::classifier::combined::CombinedClassifier\">CombinedClassifier</a>",1,["hog_detector::classifier::combined::CombinedClassifier"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"hog_detector/classifier/svm/struct.SVMClassifier.html\" title=\"struct hog_detector::classifier::svm::SVMClassifier\">SVMClassifier</a>&lt;'a&gt;",1,["hog_detector::classifier::svm::SVMClassifier"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/classifier/randomforest/struct.RandomForestClassifier.html\" title=\"struct hog_detector::classifier::randomforest::RandomForestClassifier\">RandomForestClassifier</a>",1,["hog_detector::classifier::randomforest::RandomForestClassifier"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/dataset/struct.EyesDataSet.html\" title=\"struct hog_detector::dataset::EyesDataSet\">EyesDataSet</a>",1,["hog_detector::dataset::eyes_dataset::EyesDataSet"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/dataset/struct.FolderDataSet.html\" title=\"struct hog_detector::dataset::FolderDataSet\">FolderDataSet</a>",1,["hog_detector::dataset::folder_dataset::FolderDataSet"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/dataset/struct.MemoryDataSet.html\" title=\"struct hog_detector::dataset::MemoryDataSet\">MemoryDataSet</a>",1,["hog_detector::dataset::memory_dataset::MemoryDataSet"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/dataset/struct.MnistDataSet.html\" title=\"struct hog_detector::dataset::MnistDataSet\">MnistDataSet</a>",1,["hog_detector::dataset::mnist_dataset::MnistDataSet"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/detection/struct.Detection.html\" title=\"struct hog_detector::detection::Detection\">Detection</a>",1,["hog_detector::detection::Detection"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/feature_descriptor/struct.HogFeatureDescriptor.html\" title=\"struct hog_detector::feature_descriptor::HogFeatureDescriptor\">HogFeatureDescriptor</a>",1,["hog_detector::feature_descriptor::hog_feature_descriptor::HogFeatureDescriptor"]],["impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"hog_detector/hogdetector/struct.HogDetector.html\" title=\"struct hog_detector::hogdetector::HogDetector\">HogDetector</a>&lt;C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,</span>",1,["hog_detector::hogdetector::HogDetector"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/wasm/hogdetector_js/struct.HogDetectorJS.html\" title=\"struct hog_detector::wasm::hogdetector_js::HogDetectorJS\">HogDetectorJS</a>",1,["hog_detector::wasm::hogdetector_js::HogDetectorJS"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/wasm/trainer/struct.TrainerApp.html\" title=\"struct hog_detector::wasm::trainer::TrainerApp\">TrainerApp</a>",1,["hog_detector::wasm::trainer::TrainerApp"]],["impl Freeze for <a class=\"enum\" href=\"hog_detector/wasm/trainer/enum.Msg.html\" title=\"enum hog_detector::wasm::trainer::Msg\">Msg</a>",1,["hog_detector::wasm::trainer::Msg"]],["impl Freeze for <a class=\"struct\" href=\"hog_detector/wasm/trainer/struct.Props.html\" title=\"struct hog_detector::wasm::trainer::Props\">Props</a>",1,["hog_detector::wasm::trainer::Props"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()