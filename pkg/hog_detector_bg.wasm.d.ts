/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function init_images(a: number): number;
export function init_annotation_tool(a: number, b: number): void;
export function init_trainer(a: number, b: number, c: number): void;
export function __wbg_annotationsjs_free(a: number): void;
export function annotationsjs_new(): number;
export function __wbg_annotatedimagesjs_free(a: number): void;
export function annotatedimagesjs_new(): number;
export function __wbg_hogdetectorjs_free(a: number): void;
export function hogdetectorjs_new(): number;
export function hogdetectorjs_init_random_forest_classifier(a: number): void;
export function hogdetectorjs_init_bayes_classifier(a: number): void;
export function hogdetectorjs_init_combined_classifier(a: number): void;
export function hogdetectorjs_next(a: number, b: number, c: number, d: number): void;
export function hogdetectorjs_fps(a: number): number;
export function __wbg_wasmbindgentestcontext_free(a: number): void;
export function wasmbindgentestcontext_new(): number;
export function wasmbindgentestcontext_args(a: number, b: number, c: number): void;
export function wasmbindgentestcontext_run(a: number, b: number, c: number): number;
export function __wbgtest_console_log(a: number): void;
export function __wbgtest_console_debug(a: number): void;
export function __wbgtest_console_info(a: number): void;
export function __wbgtest_console_warn(a: number): void;
export function __wbgtest_console_error(a: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut___A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hc3953d53ae2517c2(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hde8d5ce82dc1905e(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke3_mut__h140bd72ce3e708b3(a: number, b: number, c: number, d: number, e: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h10c1f3679b220805(a: number, b: number, c: number, d: number): void;
